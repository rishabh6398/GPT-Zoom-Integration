import IEBackoff from "./InverseExpBackoff";
import WebSocket from "../websocket/WebSocket";
export default class SessionApi {
    oauth2: OAuth2Object;
    id: string;
    connectionOptions: {
        handlers: any;
        reconnectOnError: boolean;
    };
    webSocketUrl: string;
    options: SessionOptions;
    webSocket: WebSocket;
    webSocketStatus: string;
    backoff: IEBackoff;
    onMessage: (arg?: any) => void;
    referenceIds: any[];
    onConnectCallback: () => void;
    static isOffline: boolean;
    static networkConnectivityDispatcher: any;
    static setNetworkConnectivityDispatcher(networkConnectivityDispatcher: any): void;
    constructor(options: SessionOptions, oauth2: OAuth2Object);
    reConnect(reCheckNetworkConnectivity?: boolean): Promise<void>;
    onForceClose(referenceId: any): void;
    onCloseWebSocket(referenceId: any): (event: any) => void;
    onConnectWebSocket(): void;
    onErrorWebSocket(err: string): void;
    onMessageWebSocket(result: string): void;
    _connect(onConnectCallback: any, referenceId: any): Promise<void>;
    connect(onConnectCallback: any): Promise<void>;
    disconnect(): void;
}
